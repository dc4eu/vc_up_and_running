---
services:
  apigw:
    container_name: "vc_apigw"
    image: "${DOCKERHUB_FQDN}/dc4eu/apigw:${TAG}"

    restart: always
    volumes:
      - ${PWD}/config.yaml:/config.yaml:ro
      - ${PWD}/log:/var/log/sunet
    expose:
      - 8080
    ports:
      - "${APIGW_HOST_PORT:-8080}:8080"
    depends_on:
      - mongo
      - issuer
    environment:
      - "VC_CONFIG_YAML=config.yaml"
    networks:
      default:
      dc4eu_shared_network:
        aliases:
          - "${APIGW_HOST}"

  issuer:
    container_name: "vc_issuer"
    image: "${DOCKERHUB_FQDN}/dc4eu/issuer:${TAG}"
    restart: always
    volumes:
      - ./config.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
      - ${PWD}/private_ec256.pem:/private_ec256.pem:ro
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  verifier:
    container_name: "vc_verifier"
    image: "${DOCKERHUB_FQDN}/dc4eu/verifier:${TAG}"
    restart: always
    volumes:
      - ${PWD}/config.yaml:/config.yaml:ro
    depends_on:
      - mongo
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  registry:
    container_name: "vc_registry"
    image: "${DOCKERHUB_FQDN}/dc4eu/registry:${TAG}"
    restart: always
    volumes:
      - ${PWD}/config.yaml:/config.yaml:ro
    depends_on:
      - mongo
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  mockas:
    container_name: "vc_mockas"
    image: "${DOCKERHUB_FQDN}/dc4eu/mockas:${TAG}"
    restart: always
    volumes:
      - ${PWD}/config.yaml:/config.yaml:ro
    depends_on:
      - apigw
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  ui:
    container_name: "vc_ui"
    image: "${DOCKERHUB_FQDN}/dc4eu/ui:${TAG}"
    restart: always
    volumes:
      - ${PWD}/config.yaml:/config.yaml:ro
      - ${PWD}/private_ec256.pem:/private_ec256.pem:ro
    depends_on:
      - apigw
      - mockas
      - verifier
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  mongo:
    image: mongo:4.0.10
    container_name: "vc_mongo"
    restart: always
    expose:
      - 27017
    volumes:
      - mongo_data:/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: vc_jaeger
    restart: always
    expose:
      - 16686
      - 4317
      - 4318
    ports:
      - "${JAEGER_HOST_PORT:-16686}:16686"
    environment:
      - "COLLECTOR_OTLP_ENABLED=true"

  satosa:
    image: "${DOCKERHUB_FQDN}/euwallet-satosa:branch-stable-2"
    container_name: satosa-issuer
    restart: always
    depends_on:
      - simplesamlphp
    expose:
      - 8000
    ports:
      - "8000:8000"
    environment:
      - "METADATA_DIR=/etc/satosa/metadata"
      - "WORKER_TIMEOUT=120"
      - "BASE=${ISSUER_URL}"
    volumes:
      - ${PWD}/satosa:/etc/satosa
      - ${PWD}/certs/https.crt:/etc/satosa/https.crt
      - ${PWD}/certs/https.key:/etc/satosa/https.key
    networks:
      default:
      dc4eu_shared_network:
        aliases:
          - "${ISSUER_HOST}"

  simplesamlphp:
    image: "${DOCKERHUB_FQDN}/swamid/simplesamlphp"
    container_name: simplesamlphp
    hostname: ${SAML_IDP_HOST}
    restart: always
    expose:
      - "8443"
    ports:
      - "8443:8443"
    volumes:
      - "./simplesamlphp/ports.conf:/etc/apache2/ports.conf:ro"
      - "./simplesamlphp/apache2.conf:/etc/apache2/sites-enabled/ssp.conf:ro"
      - "./simplesamlphp/authsources.php:/var/simplesamlphp/config/authsources.php:ro"
      - "./simplesamlphp/config.php:/var/simplesamlphp/config/config.php:ro"
      - "./simplesamlphp/samlcert:/var/simplesamlphp/cert:ro"
      - "./simplesamlphp/webcert:/certs:ro"
      - "./simplesamlphp/saml20-idp-hosted.php:/var/simplesamlphp/metadata/saml20-idp-hosted.php:ro"
      - "./simplesamlphp/satosa-issuer.xml:/var/simplesamlphp/metadata/satosa-issuer.xml:ro"
      - "./simplesamlphp/name2oid.php:/var/simplesamlphp/attributemap/name2oid.php:ro"
    networks:
      default:
      dc4eu_shared_network:
        aliases:
          - "${SAML_IDP_HOST}"

networks:
  default:
  dc4eu_shared_network:
    name: ${NETWORK_NAME}
    external: true

volumes:
  mongo_data:
