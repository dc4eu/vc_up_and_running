---
module: satosa_openid4vci.openid4vci.OpenID4VCIFrontend
name: oidc-front
config:
  domain: localhost
  server_name: localhost
  base_url: <base_url>
  storage:
    class: satosa_oidcop.core.storage.file.FilesystemDBNoCache
    kwargs:
      fdir: storage
      key_conv: idpyoidc.util.Base64
      value_conv: idpyoidc.util.JSON
  default_target_backend: Saml2SP
  salt_size: 8
  op:
    server_info:
      entity_id: <base_url>
      persistence:
        class: satosa_idpyop.persistence.federation_entity.FEPersistence
        kwargs:
          storage:
            class: satosa_idpyop.core.storage.file.FilesystemDBNoCache
            kwargs:
              fdir: fe_storage
              key_conv: idpyoidc.util.Base64
              value_conv: idpyoidc.util.JSON
      key_config:
        key_defs:
        - type: RSA
          use:
          - sig
        - type: EC
          crv: P-256
          use:
          - sig
        private_path: private/pid_fed_keys.json
        public_path: public/pid_fed_keys.json
        read_only: false
      preference:
        organization_name: The OP operator
        contacts: operations@op.example.com
      authority_hints:
      - https://openidfed-dev-1.sunet.se:7001
      trust_marks:
        #      - eyJhbGciOiJSUzI1NiIsImtpZCI6IlUzTTRNMDlPTUZGaGNuTnJVbGhyVkU5ckxVOUpWMGwxVHpSaExXVjZVV1l4VlZOaE1UZzRVbWRxT0EifQ.eyJpYXQiOiAxNzMzMzk5NTY2LCAiaWQiOiAiaHR0cDovL2RjNGV1LmV4YW1wbGUuY29tL1BEQTFDcmVkZW50aWFsL3NlIiwgInN1YiI6ICJodHRwczovL3Rlcm1pbmF0b3IxNC50cmFucXVpbGxpdHkuc2UiLCAiZXhwIjogMTczNTk5MTU2NiwgImlzcyI6ICJodHRwczovL29wZW5pZGZlZC10ZXN0LTEuc3VuZXQuc2U6NjAwMSJ9.UzVCRbScRzXyCvZt0qV_7nGfBJaaa6VpLiHjUSynGBrzwlZAH_BFhEs70Z4Kb96RCO9izV_OgDRVrnTqxTKK9H7llBcTyuQMZiCWuVrk_ZFFk6DgmH9XkVKXWBVRgHEgpV-4IvMINz2Nx00EEVWTGlERCzoCwGUeFBjeLlAJDmVPabUEijQ5YNHODGMe7fhWZquLkaf7q2oe1t_ebjZDi21b2q-xgm1XSSvjSQ9ibCHxO4OJFYLLSPDPn4RykipSOIKrd45juoCITLuyywf_OPdiQibzmTQYBZ0tpbsSaKahhHFDEMJPXnrNyX2KofV02NIDw3lp7U4gq0YAgho7Hw
        #      - eyJhbGciOiJSUzI1NiIsImtpZCI6IlUzTTRNMDlPTUZGaGNuTnJVbGhyVkU5ckxVOUpWMGwxVHpSaExXVjZVV1l4VlZOaE1UZzRVbWRxT0EifQ.eyJpYXQiOiAxNzMzNDEwMTQyLCAiaWQiOiAiaHR0cDovL2RjNGV1LmV4YW1wbGUuY29tL0VISUNDcmVkZW50aWFsL3NlIiwgInN1YiI6ICJodHRwczovL3Rlcm1pbmF0b3IxNC50cmFucXVpbGxpdHkuc2UiLCAiZXhwIjogMTczNjAwMjE0MiwgImlzcyI6ICJodHRwczovL29wZW5pZGZlZC10ZXN0LTEuc3VuZXQuc2U6NjAwMSJ9.dTkJY2TU49Nk_LGa4kvGdHbbGaPtCEIzG5YTC8Ghcy1ID4AFAAhUeourZ7xKROKcdit7TbB3UcEKhZb9MNqb14ay63c6h1TQfgJbPM6et4WX9GRWiEW21lm_v-EHZQbF_e9wzFxdbV5C5eRGoULz-7Tx-oSj-79ubMEo6D11MiOWd3csPNT2HlwaaXrBzANsk1G_x37-Titcu5YwC4wycGdRgqogGbJEiyFrLHtr20GsGk3gDIhet1BJpBFUbFbY6DgdyZzAslsfHMO4Uy40iHkDi9IJY-XhkCVx2q2Hb_HKBNBFlE2xIQk8tGC9qxBlzvO5qPrPwSIhSNWKDJnxvg
      - eyJhbGciOiJSUzI1NiIsImtpZCI6IlUzazNhRkpvYmpOQllWaEpMVzV6WjJRMlkwdHlaRkZ6UTB4NGNYRk1TR1V6U0VoVFVYbHlNV0ZUT0EifQ.eyJpYXQiOiAxNzMzNDcyMDM5LCAiaWQiOiAiaHR0cDovL2RjNGV1LmV4YW1wbGUuY29tL0VISUNDcmVkZW50aWFsL3NlIiwgInN1YiI6ICJodHRwczovL3Rlcm1pbmF0b3IxNC50cmFucXVpbGxpdHkuc2UiLCAiZXhwIjogMTczNjA2NDAzOSwgImlzcyI6ICJodHRwczovL29wZW5pZGZlZC1kZXYtMS5zdW5ldC5zZTo2MDAxIn0.TT_F6x1LCEknbqtkPSvIYT62HmqcY0vMWoGKBIYUfsEOvKJAFnNRXiaLh-9-3fz2g2PEwJ2j9oKiblCVrax7EzdatLMK24f0WUyJbHyRoXBXML72tSu0seFUMwSRHu7cNtNB-7tDIkAjIqIf-CKAkP_a88VzMGkmVLy1F4VpmZYd9GltaEme2fdqWwgbjGjWXZOOmyrN3Y6i_U4O-h5khgoN1_dxznQRNUZTnAj1ks5Q6TSDDWrJVMPOyGeS5svddjexzR818v0FvcW5XHm51J-4w2M3S2vupkb28o7PsBLkD95a9LFFsiSWM_Eb2Bs0hK25OHWcfrcXTpCojll87g
      - eyJhbGciOiJSUzI1NiIsImtpZCI6IlUzazNhRkpvYmpOQllWaEpMVzV6WjJRMlkwdHlaRkZ6UTB4NGNYRk1TR1V6U0VoVFVYbHlNV0ZUT0EifQ.eyJpYXQiOiAxNzMzNDcyMTE4LCAiaWQiOiAiaHR0cDovL2RjNGV1LmV4YW1wbGUuY29tL1BEQTFDcmVkZW50aWFsL3NlIiwgInN1YiI6ICJodHRwczovL3Rlcm1pbmF0b3IxNC50cmFucXVpbGxpdHkuc2UiLCAiZXhwIjogMTczNjA2NDExOCwgImlzcyI6ICJodHRwczovL29wZW5pZGZlZC1kZXYtMS5zdW5ldC5zZTo2MDAxIn0.KrXaxDSrY7AxMr2G2bYrQzgdcbvMI2ZyWOjPRhSmvgbkfTlilpfSKdyOXmJrLhB346bRFNwCwr9ztEu6djjoN9AfiFUgNUjTQyjHgxbCbm4vohPHUE8wiyIURBlpGmuV08qny-fuHgRnID2GaF5KtF4wp9UO4yJ6RtpvcJIF5gjgZbHcj_LMe2CgE0zmjgYfn4CvNgmBSdMWJpTBIRpM0wGWLaDSWLz5Bs-B8tayZmI14PFdd1efxSANYk8tWzZI0R2rgfwgrLZ8AVhX4_BRMzcfoLvhFJzcQDLYX_fNqB1RP5SsGK12Kb7NmvTnC8xYdcXJ-XuxXtgadzn95hrhAg
      endpoints:
        entity_configuration:
          path: ".well-known/openid-federation"
          class: fedservice.entity.server.entity_configuration.EntityConfiguration
      trust_anchors:
        https://openidfed-dev-1.sunet.se:7001:
          keys:
          - kty: RSA
            use: sig
            kid: QjZ1N2RFTFFST0ZvMWs2NFpiakxCeFV5dGVURjFIWThuUVB3RjRMc0Frdw
            e: AQAB
            "n": hrRAHgzRjUhtHyaaSSruD9Ie89P1FEuhuHviHPSpltHYY7pF5T92tmQUEHCOo0bXmBtvgpCFRxv6SaUHPnex_eUEMPdHsOPMumLtdhciT81ikKpw6Qmfx2EmZ5BbWqeZF0MC5LKiipgN5jQL_WbrkRCVhEfXwMJmnjJNIA3AG94rHOA9b5aXV5EZ7YaiWMJZaOkmRZ1u8O6SoQZW630b4coDAcwsKNoNxUsfqCglsSkX-gs9DAxRfMC9jhO_W1htczxtgjHoQ_wh-fAbI4uJafLj_6FlWIh0C0igewjU8DRQsm2Y0pqWP8ERqKeRx_AQxlzXLd9XIUNXKdTbs0ro-Q
          - kty: EC
            use: sig
            kid: TjJWS282a3pZSEFhM0IzN05lMmQ4XzdCTldJN2MyVkdzd3FDYktRT2I0Yw
            crv: P-256
            x: WhSm-S0uLFeh-cAr2Nqp0H0tpG9dyOlbP-sLGa8VYM4
            "y": 06vDA3rcbfq2aN1KGyZCM1zQ-fuGqUdN6ibFTrCawmY
      httpc_params:
        verify: false
      entity_type:
        oauth_authorization_server:
          class: openid4v.ServerEntity
          kwargs:
            config:
              client_authn_methods:
                client_secret_basic: idpyoidc.server.client_authn.ClientSecretBasic
                client_secret_post: idpyoidc.server.client_authn.ClientSecretPost
                attest_jwt_client_auth: openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
                dpop_client_auth: idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
                client_secret_jwt: idpyoidc.server.client_authn.ClientSecretJWT
                private_key_jwt: idpyoidc.server.client_authn.PrivateKeyJWT
                pushed_authz: idpyoidc.server.client_authn.PushedAuthorization
              httpc_params:
                verify: false
                timeout: 1
              persistence:
                class: satosa_idpyop.persistence.openid_provider.OPPersistence
                kwargs:
                  storage:
                    class: satosa_idpyop.core.storage.file.FilesystemDBNoCache
                    kwargs:
                      fdir: op_storage
                      key_conv: idpyoidc.util.Base64
                      value_conv: idpyoidc.util.JSON
              preference:
                grant_types_supported:
                - authorization_code
                - implicit
                - urn:ietf:params:oauth:grant-type:jwt-bearer
                - refresh_token
              server_type: oauth2
              token_handler_args:
                jwks_def:
                  private_path: private/token_jwks.json
                  read_only: false
                  key_defs:
                  - type: oct
                    bytes: 24
                    use:
                    - enc
                    kid: code
                code:
                  lifetime: 600
                  kwargs:
                    crypt_conf:
                      kwargs:
                        keys:
                          key_defs:
                          - type: OCT
                            use:
                            - enc
                            kid: password
                          - type: OCT
                            use:
                            - enc
                            kid: salt
                        iterations: 1
                token:
                  class: idpyoidc.server.token.jwt_token.JWTToken
                  kwargs:
                    lifetime: 3600
                    add_claims_by_scope: true
                refresh:
                  class: idpyoidc.server.token.jwt_token.JWTToken
                  kwargs:
                    lifetime: 3600
                id_token:
                  class: idpyoidc.server.token.id_token.IDToken
                  kwargs:
                    base_claims:
                      email:
                        essential: true
                      email_verified:
                        essential: true
              keys:
                key_defs:
                - type: RSA
                  use:
                  - sig
                - type: EC
                  crv: P-256
                  use:
                  - sig
                uri_path: jwks/oauth_authorization_server
                private_path: private/oa_jwks.json
                read_only: false
              endpoint:
                token:
                  path: token
                  class: openid4v.openid_credential_issuer.access_token.Token
                  kwargs:
                    client_authn_method:
                    - attest_jwt_client_auth
                authorization:
                  path: authorization
                  class: openid4v.openid_credential_issuer.authorization.Authorization
                  kwargs:
                    response_types_supported:
                    - code
                    response_modes_supported:
                    - query
                    - form_post
                    request_parameter_supported: true
                    request_uri_parameter_supported: true
                    client_authn_method:
                    - pushed_authz
                pushed_authorization:
                  path: par
                  class: idpyoidc.server.oauth2.pushed_authorization.PushedAuthorization
                  kwargs:
                    client_authn_method:
                    - attest_jwt_client_auth
              add_ons:
                pkce:
                  function: idpyoidc.server.oauth2.add_on.pkce.add_support
                  kwargs:
                    code_challenge_length: 64
                    code_challenge_method: S256
                dpop:
                  function: idpyoidc.server.oauth2.add_on.dpop.add_support
                  kwargs:
                    dpop_signing_alg_values_supported:
                    - ES256
                    dpop_endpoints:
                    - token
              template_dir: template
              authentication:
                anon:
                  acr: http://www.swamid.se/policy/assurance/al1
                  class: idpyoidc.server.user_authn.user.NoAuthn
                  kwargs:
                    user: diana
              authz:
                class: idpyoidc.server.authz.AuthzHandling
                kwargs:
                  grant_config:
                    usage_rules:
                      authorization_code:
                        supports_minting:
                        - access_token
                        - refresh_token
                        - id_token
                        max_usage: 1
                      access_token: {}
                      refresh_token:
                        supports_minting:
                        - access_token
                        - refresh_token
                        - id_token
                    expires_in: 43200
              session_params:
                encrypter:
                  kwargs:
                    iterations: 1
                    keys:
                      key_defs:
                      - kid: password
                        type: OCT
                        use:
                        - enc
                      - kid: salt
                        type: OCT
                        use:
                        - enc
              userinfo:
                class: satosa_idpyop.user_info.ProxyUserInfo
                kwargs:
                  credential_type_to_claims:
                    PersonIdentificationData:
                    - email
                    - address.streetaddress
                    - sub
                    - name
                    - family_name
                    - given_name
                    - nickname
        openid_credential_issuer:
          class: satosa_openid4vci.openid_credential_issuer.OpenidCredentialIssuer
          kwargs:
            config:
              issuer: https://example.com/
              client_authn_methods:
                client_secret_basic: idpyoidc.server.client_authn.ClientSecretBasic
                client_secret_post: idpyoidc.server.client_authn.ClientSecretPost
                dpop_client_auth: idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
                attest_jwt_client_auth: openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
              add_ons:
                dpop:
                  function: idpyoidc.server.oauth2.add_on.dpop.add_support
                  kwargs:
                    dpop_signing_alg_values_supported:
                    - ES256
                    dpop_endpoints:
                    - credential
              persistence:
                class: satosa_idpyop.persistence.openid_credential_issuer.OCIPersistence
                kwargs:
                  storage:
                    class: satosa_idpyop.core.storage.file.FilesystemDBNoCache
                    kwargs:
                      fdir: op_storage
                      key_conv: idpyoidc.util.Base64
                      value_conv: idpyoidc.util.JSON
              userinfo:
                class: satosa_idpyop.user_info.ProxyUserInfo
                kwargs:
                  credential_type_to_claims:
                    PersonIdentificationData:
                    - email
                    - address.streetaddress
                    - sub
                    - name
                    - family_name
                    - given_name
                    - nickname
              httpc_params:
                verify: false
                timeout: 11
              preference:
                attribute_disclosure:
                  '':
                  - given_name
                  - family_name
                  - name
                  - email
                  - nickname
                credential_configurations_supported:
                  PDA1Credential:
                    format: vc+sd-jwt
                    id: eudiw.pda1.se
                    cryptographic_binding_methods_supported:
                    - jwk
                    cryptographic_suites_supported:
                    - RS256
                    - RS512
                    - ES256
                    - ES512
                    display:
                      name: Swedish PDA1 Provider Example
                      locale: en-US
                    vct: PDA1Credential
                    credential_definition:
                      type:
                      - PDA1Credential
                      credentialSubject:
                        family_name:
                          display:
                          - locale: en-US
                            name: Current Family Name
                          - locale: it-IT
                            name: Cognome
                          mandatory: true
                        given_name:
                          display:
                          - locale: en-US
                            name: Current First Name
                          - locale: it-IT
                            name: Nome
                          mandatory: true
                        birth_date:
                          display:
                          - locale: en-US
                            name: Birth date
                          mandatory: true
                  EHICCredential:
                    format: vc+sd-jwt
                    id: eudiw.ehic.se
                    cryptographic_binding_methods_supported:
                      - jwk
                    cryptographic_suites_supported:
                      - RS256
                      - RS512
                      - ES256
                      - ES512
                    display:
                      name: Swedish EHIC Provider Example
                      locale: en-US
                    vct:
                      EHICCredential
                    credential_definition:
                      type:
                        - EHICCredential
                      credentialSubject:
                        family_name:
                          display:
                            - locale: en-US
                              name: Current Family Name
                          mandatory: true
                        given_name:
                          display:
                            - locale: en-US
                              name: Current First Name
                          mandatory: true
                        birth_date:
                          display:
                            - locale: en-US
                              name: Birth date
              keys:
                key_defs:
                - type: RSA
                  use:
                  - sig
                - type: EC
                  crv: P-256
                  use:
                  - sig
                private_path: private/oci_jwks.json
                read_only: false
              endpoint:
                credential:
                  path: credential
                  class: openid4v.openid_credential_issuer.credential.Credential
                  kwargs:
                    client_authn_method:
                    - dpop_client_auth
                    credential_constructor:
                      EHICCredential:
                        class: openid4v.openid_credential_issuer.credential_constructor.authentic_source.CredentialConstructor
                        kwargs:
                          url: http://vc_apigw/api/v1/credential
                          jwks_url: http://vc-interop-1.sunet.se/api/v1/credential/.well-known/jwks
                          body:
                            credential_type: sdjwt
                            document_type: EHIC
                      PDA1Credential:
                        class: openid4v.openid_credential_issuer.credential_constructor.authentic_source.CredentialConstructor
                        kwargs:
                          url: http://vc_apigw/api/v1/credential
                          jwks_url: http://vc-interop-1.sunet.se/api/v1/credential/.well-known/jwks
              template_dir: template
              session_management: false

